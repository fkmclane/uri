#!/usr/bin/env python3
import http.client
import io
import json
import mimetypes
import sys
import time

service = 'https://uri.fooster.io'

store_https = True
store = 'store.fooster.io'
namespace = '/uri'

interval = 604800 # 1 week

class AliasExistsError(Exception):
	pass

class BadAliasError(Exception):
	pass

class UnknownError(Exception):
	pass

def create(uri, alias=None):
	if store_https:
		conn = http.client.HTTPSConnection(store)
	else:
		conn = http.client.HTTPConnection(store)

	if alias:
		resource = '/api' + namespace + '/' + alias
		method = 'PUT'
	else:
		resource = '/api' + namespace + '/'
		method = 'POST'

	if isinstance(uri, str):
		uri = uri.encode()

	payload = {}

	payload['filename'] = None
	payload['type'] = 'text/uri-list'

	payload['size'] = len(uri)

	payload['expire'] = time.time() + interval
	payload['locked'] = True

	headers = {'Content-Type': 'application/json'}

	conn.request(method, resource, headers=headers, body=json.dumps(payload).encode())

	response = conn.getresponse()

	returned = json.loads(response.read().decode())

	if response.status != 201:
		if returned['error'] == 403:
			raise AliasExistsError()
		elif returned['error'] == 404:
			raise BadAliasError()
		else:
			raise UnknownError()

	resource = '/store' + namespace + '/' + returned['alias']
	method = 'PUT'

	headers = {'Content-Length': len(uri)}

	conn.request(method, resource, body=uri)

	response = conn.getresponse()
	response.read()

	if response.status != 204:
		raise UnknownError()

	location = service + '/' + returned['alias']

	conn.close()

	return location

if __name__ == '__main__':
	import sys

	from argparse import ArgumentParser

	parser = ArgumentParser(description='create temporary redirects using the service at {}'.format(service))
	parser.add_argument('-a', '--alias', dest='alias', help='alias to link from (random if omitted)')
	parser.add_argument('uri', help='uri to shorten')

	args = parser.parse_args()

	try:
		print('created at ' + create(args.uri, args.alias))
	except AliasExistsError:
		print('uri.py: error: alias already exists', file=sys.stderr)
		sys.exit(3)
	except BadAliasError:
		print('uri.py: error: alias does not exist', file=sys.stderr)
		sys.exit(5)
	except UnknownError:
		print('uri.py: error: an unknown error occured', file=sys.stderr)
		sys.exit(1)
